ignore = [
    # Never enforce `E501` (line length violations).
    "E501",
    "D415",    # First line of docstring should end with a period
    "COM812",  # missing trailing comma in Python 3.5+
    "UP008",   # use of super(class, self) - probably can re-apply this at some point
    "SIM115",  # Use context handler for open()
    "PLR1711", # useless return stmt
    "EM101",   # use of string literal in exception
    "EM102",   # using f-string in exception literal
    "T201",    # use of print
    "SLF001",  # access to _ private members
]

select = [
    "E",   # pycodestyle Errors - https://beta.ruff.rs/docs/rules/#error-e
    "W",   # pycodestyle Warnings - https://beta.ruff.rs/docs/rules/#warning-w
    "F",   # Pyflakes - https://beta.ruff.rs/docs/rules/#pyflakes-f
    "C90", # McCabe complexity - https://beta.ruff.rs/docs/rules/#mccabe-c90
    "I",   # import sorting - https://beta.ruff.rs/docs/rules/#isort-i
    # "D",  # pydoc style - https://beta.ruff.rs/docs/rules/#pydocstyle-d
    # "UP",  # python upgrade - https://beta.ruff.rs/docs/rules/#pyupgrade-up
    "YTT", # sys.version misused - https://beta.ruff.rs/docs/rules/#flake8-2020-ytt

    # "ANN", # annotations - https://beta.ruff.rs/docs/rules/#flake8-annotations-ann
    "S", # flake8 bandit - https://beta.ruff.rs/docs/rules/#flake8-bandit-s
    # "BLE", # blind exceptions - https://beta.ruff.rs/docs/rules/#flake8-blind-except-ble

    # "FBT", # boolean trap - https://beta.ruff.rs/docs/rules/#flake8-boolean-trap-fbt
    "B",   # bugbear - https://beta.ruff.rs/docs/rules/#flake8-bugbear-b 
    "A",   # flake8 builtins - https://beta.ruff.rs/docs/rules/#flake8-builtins-a
    "COM", # flake8 commas - https://beta.ruff.rs/docs/rules/#flake8-commas-com
    "C4",  # flake8 comprehensions - https://beta.ruff.rs/docs/rules/#flake8-comprehensions-c4
    "DTZ", # flake8 datetime - https://beta.ruff.rs/docs/rules/#flake8-datetime-dtz
    "EM",  # flake8 error messages - https://beta.ruff.rs/docs/rules/#flake8-errmsg-em
    "EXE", # flake8 executables https://beta.ruff.rs/docs/rules/#flake8-executable-exe
    "ISC", # implicit string concat https://beta.ruff.rs/docs/rules/#flake8-implicit-str-concat-isc
    "ICN", # import conventions - https://beta.ruff.rs/docs/rules/#flake8-import-conventions-icn
    "G",   # flake8 logging - https://beta.ruff.rs/docs/rules/#flake8-logging-format-g
    "INP", # https://beta.ruff.rs/docs/rules/#flake8-no-pep420-inp
    "PIE", # https://beta.ruff.rs/docs/rules/#flake8-pie-pie
    "T20", # https://beta.ruff.rs/docs/rules/#flake8-print-t20
    "PYI", # https://beta.ruff.rs/docs/rules/#flake8-pyi-pyi
    "PT",  # https://beta.ruff.rs/docs/rules/#flake8-pytest-style-pt
    "Q",   # https://beta.ruff.rs/docs/rules/#flake8-quotes-q
    "RSE", # https://beta.ruff.rs/docs/rules/#flake8-raise-rse
    "RET", # https://beta.ruff.rs/docs/rules/#flake8-return-ret
    "SLF", # https://beta.ruff.rs/docs/rules/#flake8-self-slf
    "SIM", # https://beta.ruff.rs/docs/rules/#flake8-simplify-sim
    "TID", # https://beta.ruff.rs/docs/rules/#flake8-tidy-imports-tid
    "TCH", # https://beta.ruff.rs/docs/rules/#flake8-type-checking-tch
    "INT", # https://beta.ruff.rs/docs/rules/#flake8-gettext-int
    "ARG", # https://beta.ruff.rs/docs/rules/#flake8-unused-arguments-arg
    # "PTH", # https://beta.ruff.rs/docs/rules/#flake8-use-pathlib-pth
    # "ERA", # https://beta.ruff.rs/docs/rules/#eradicate-era
    "PD",  # https://beta.ruff.rs/docs/rules/#pandas-vet-pd
    "PGH", # https://beta.ruff.rs/docs/rules/#pygrep-hooks-pgh

    # Pylint
    "PLC", # https://beta.ruff.rs/docs/rules/#convention-plc
    "PLE", # https://beta.ruff.rs/docs/rules/#error-ple
    "PLR", # https://beta.ruff.rs/docs/rules/#refactor-plr
    "PLW", # https://beta.ruff.rs/docs/rules/#warning-plw

    # "TRY", # https://beta.ruff.rs/docs/rules/#tryceratops-try
    "NPY", # https://beta.ruff.rs/docs/rules/#numpy-specific-rules-npy
    "RUF", # https://beta.ruff.rs/docs/rules/#ruff-specific-rules-ruf
]

[per-file-ignores]
"setup.py" = ["F401"]
